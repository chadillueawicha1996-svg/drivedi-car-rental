import 'package:flutter/material.dart';
import 'package:remixicon/remixicon.dart';
import 'notification_screen.dart';
import 'language_screen.dart';
import 'welcome_screen.dart';
import '../widgets/search_rental_panel.dart'; // üëà ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏¢‡∏Å‡πÑ‡∏ß‡πâ

class HomeScreen extends StatefulWidget {
  final Function(bool)? onLoadingChanged;
  
  const HomeScreen({super.key, this.onLoadingChanged});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> with AutomaticKeepAliveClientMixin {
  // Loading state
  bool _isLoading = true;
  
  // Static cached image ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà
  static Image? _cachedBackgroundImage;

  @override
  bool get wantKeepAlive => true; // ‡πÉ‡∏´‡πâ Flutter ‡πÄ‡∏Å‡πá‡∏ö widget ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥

  @override
  void initState() {
    super.initState();
    _preloadImageAndSimulateLoading();
  }

  Future<void> _preloadImageAndSimulateLoading() async {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á cached image ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    _cachedBackgroundImage ??= Image.asset(
        'assets/images/bg_1.JPG',
        fit: BoxFit.cover,
      );
    
    // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡πÄ‡∏ä‡πà‡∏ô API calls, etc.)
    await Future.delayed(const Duration(milliseconds: 500));
    
    if (mounted) {
      setState(() {
        _isLoading = false;
      });
      
      // ‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ MainNavigationScreen ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
      widget.onLoadingChanged?.call(false);
    }
  }

  @override
  Widget build(BuildContext context) {
    super.build(context); // ‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö AutomaticKeepAliveClientMixin
    
    // ‡πÅ‡∏™‡∏î‡∏á Welcome Screen ‡∏Ç‡∏ì‡∏∞‡πÇ‡∏´‡∏•‡∏î
    if (_isLoading) {
      return const Scaffold(
        body: WelcomeScreen(),
      );
    }
    
    return Scaffold(
      body: Stack(
        children: [
          // ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏£‡∏π‡∏õ - ‡πÉ‡∏ä‡πâ cached image
          Positioned.fill(
            child: _cachedBackgroundImage ?? Image.asset(
              'assets/images/bg_1.JPG',
              fit: BoxFit.cover,
            ),
          ),
          // Gradient ‡∏ó‡∏±‡∏ö‡∏£‡∏π‡∏õ
          Positioned.fill(
            child: RepaintBoundary(
              child: Container(
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                    begin: Alignment.topCenter,
                    end: Alignment.bottomCenter,
                    colors: [
                      const Color(0xFF0050B4).withOpacity(1.0),
                      const Color(0xFF0073FF).withOpacity(0.55),
                      const Color(0xFF0073FF).withOpacity(0.0),
                    ],
                    stops: const [0.0, 0.55, 1.0],
                  ),
                ),
              ),
            ),
          ),

          // Header
          Positioned(
            top: 55,
            left: 0,
            right: 0,
            child: RepaintBoundary(
              child: Padding(
                padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 14),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    Row(
                      children: const [
                        Icon(Icons.directions_car_filled, color: Colors.white),
                        SizedBox(width: 8),
                        Text('DRIVEDI',
                            style: TextStyle(
                                color: Colors.white,
                                fontWeight: FontWeight.bold,
                                fontSize: 20)),
                      ],
                    ),
                    Row(
                      children: [
                        GestureDetector(
                          onTap: () => Navigator.push(
                            context,
                            MaterialPageRoute(
                                builder: (_) => const NotificationScreen()),
                          ),
                          child: const Icon(Remix.notification_3_line,
                              color: Colors.white),
                        ),
                        const SizedBox(width: 12),
                        GestureDetector(
                          onTap: () => Navigator.push(
                            context,
                            MaterialPageRoute(
                                builder: (_) => const LanguageScreen()),
                          ),
                          child: const Icon(Remix.global_line,
                              color: Colors.white),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
            ),
          ),

          // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏±‡∏ß
          Positioned(
            top: 140,
            left: 0,
            right: 0,
            child: RepaintBoundary(
              child: const Padding(
                padding: EdgeInsets.symmetric(horizontal: 20),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start, // ‡∏ä‡∏¥‡∏î‡∏ã‡πâ‡∏≤‡∏¢
                  children: [
                    Text('‡∏´‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏±‡∏ô!',
                        style: TextStyle(
                            color: Colors.white,
                            fontSize: 22,
                            fontWeight: FontWeight.w700)),
                    SizedBox(height: 6),
                    Text('‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢',
                        style: TextStyle(
                            color: Colors.white,
                            fontSize: 16,
                            fontWeight: FontWeight.w400)),
                            
                  ],
                ),
              ),
            ),
          ),

          // ‡πÅ‡∏ú‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏•‡∏≠‡∏¢‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
          Positioned(
            left: 16,
            right: 16,
            bottom: 250,
            child: RepaintBoundary(
              child: Container(
                padding: const EdgeInsets.all(2.2),
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(22),
                ),
                child: Padding(
                  padding: EdgeInsets.all(2), // ‡∏Ç‡∏≠‡∏ö‡∏™‡∏µ‡∏ü‡πâ‡∏≤
                  child: SearchRentalPanel(
                    initialPickup: DateTime.now().add(const Duration(hours: 1)),
                    initialDrop: DateTime.now().add(const Duration(days: 2, hours: 1)),
                  ),
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}
